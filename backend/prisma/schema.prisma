generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String  @id @default(uuid())
  providerId   String? @unique @map("provider_id") @db.VarChar(100)
  providerName String? @map("provider_name") @db.VarChar(50)
  email        String  @unique @db.VarChar(100)

  name  String? @db.VarChar(100)
  image String? @db.VarChar(500)

  isPremium Boolean @default(false)

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(6)
  Product   Product[]

  @@map("users")
}

enum PlatformType {
  MERCADO_LIVRE
}

model Product {
  id                 String       @id @default(uuid())
  name               String       @db.VarChar(200)
  image              String       @db.VarChar(500)
  classification     Int?
  platform           PlatformType
  currentPrice       Int          @map("current_price")
  oldPrice           Int?         @map("old_price")
  link               String       @db.VarChar(500)
  discountPercentage Decimal?     @map("discount_percentage")
  discountAmount     Int?         @map("discount_amount")
  currency           String       @db.VarChar(50)

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  scrapedAt DateTime  @default(now()) @map("scraped_at") @db.Timestamptz(6)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(6)

  @@map("products")
}
